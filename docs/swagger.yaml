definitions:
  api.streamJSONResponse:
    properties:
      args:
        additionalProperties:
          type: string
        type: object
      data:
        type: string
      files:
        additionalProperties:
          type: string
        type: object
      form:
        additionalProperties:
          type: string
        type: object
      headers:
        additionalProperties:
          type: string
        type: object
      id:
        type: integer
      json: {}
      method:
        type: string
      origin:
        type: string
      url:
        type: string
    type: object
  utils.HTTPResponse:
    properties:
      args:
        additionalProperties:
          type: string
        type: object
      data:
        type: string
      files:
        additionalProperties:
          type: string
        type: object
      form:
        additionalProperties:
          type: string
        type: object
      headers:
        additionalProperties:
          type: string
        type: object
      json: {}
      method:
        type: string
      origin:
        type: string
      url:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: API Support
    url: https://github.com/kics223w1/EndpointLab
  description: An alternative to httpbin.org in Gin.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: EndpointLab
  version: "1.0"
paths:
  /absolute-redirect/{n}:
    get:
      consumes:
      - application/json
      description: Redirects the request to a new URL a specified number of times.
      parameters:
      - description: Number of redirects
        in: path
        name: "n"
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "302":
          description: Redirects to the next URL
          schema:
            type: string
        "400":
          description: Invalid redirect count
          schema:
            type: object
      summary: Handle absolute redirects.
      tags:
      - Redirects
  /anything:
    delete:
      consumes:
      - application/json
      description: Return anything that is passed to the request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Returns anything that is passed to request
      tags:
      - Anything
    get:
      consumes:
      - application/json
      description: Return anything that is passed to the request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Returns anything that is passed to request
      tags:
      - Anything
    head:
      consumes:
      - application/json
      description: Return anything that is passed to the request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Returns anything that is passed to request
      tags:
      - Anything
    options:
      consumes:
      - application/json
      description: Return anything that is passed to the request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Returns anything that is passed to request
      tags:
      - Anything
    patch:
      consumes:
      - application/json
      description: Return anything that is passed to the request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Returns anything that is passed to request
      tags:
      - Anything
    post:
      consumes:
      - application/json
      description: Return anything that is passed to the request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Returns anything that is passed to request
      tags:
      - Anything
    put:
      consumes:
      - application/json
      description: Return anything that is passed to the request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Returns anything that is passed to request
      tags:
      - Anything
  /base64/{value}:
    get:
      consumes:
      - text/plain
      description: Decodes a Base64 encoded string provided in the URL parameter.
      parameters:
      - default: RW5kcG9pbnRMYWIgaXMgYXdlc29tZQ==
        description: Base64 encoded string
        in: path
        name: value
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Decoded string
          schema:
            type: string
        "400":
          description: Incorrect Base64 data
          schema:
            type: string
      summary: Decode Base64 value.
      tags:
      - Dynamic
  /brotli:
    get:
      consumes:
      - application/json
      description: Returns a Brotli compressed response.
      produces:
      - application/json
      responses:
        "200":
          description: Brotli-encoded data.
      summary: Handle Brotli compression.
      tags:
      - Response Formats
  /bytes/{n}:
    get:
      consumes:
      - text/plain
      description: Generates a specified number of random bytes.
      parameters:
      - description: Number of bytes
        in: path
        name: "n"
        required: true
        type: integer
      produces:
      - application/octet-stream
      responses:
        "200":
          description: Random bytes
          schema:
            type: file
        "400":
          description: Invalid number of bytes requested
          schema:
            type: string
        "500":
          description: Failed to generate random bytes
          schema:
            type: string
      summary: Generate random bytes.
      tags:
      - Dynamic
  /cache:
    get:
      parameters:
      - description: Optional header to check if the resource has been modified since
          the specified date
        in: header
        name: If-Modified-Since
        type: string
      - description: Optional header to check if the resource matches the given ETag
        in: header
        name: If-None-Match
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Cached response
        "304":
          description: Modified
      summary: Returns a 304 if an If-Modified-Since header or If-None-Match is present.
        Returns the same as a GET otherwise.
      tags:
      - Response Inspection
  /cache/{value}:
    get:
      parameters:
      - description: Number of seconds for the Cache-Control max-age directive
        in: path
        name: value
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Cache control set
      summary: Sets a Cache-Control header for n seconds.
      tags:
      - Response Inspection
  /cookies:
    get:
      consumes:
      - application/json
      description: Returns the cookies sent by the client
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Get cookies
      tags:
      - Cookies
  /cookies/delete:
    get:
      consumes:
      - application/json
      parameters:
      - description: Freeform cookie value
        in: query
        name: freeform
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Redirects to cookie list
          schema:
            type: string
      summary: Deletes cookie(s) as provided by the query string and redirects to
        cookie list.
      tags:
      - Cookies
  /cookies/set:
    get:
      consumes:
      - application/json
      parameters:
      - description: Freeform cookie value
        in: query
        name: freeform
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Redirects to cookie list
          schema:
            type: string
      summary: Sets cookie(s) as provided by the query string and redirects to cookie
        list.
      tags:
      - Cookies
  /cookies/set/{name}/{value}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Cookie name
        in: path
        name: name
        required: true
        type: string
      - description: Cookie value
        in: path
        name: value
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Redirects to cookie list
          schema:
            type: string
      summary: Set a cookie with specified name and value
      tags:
      - Cookies
  /deflate:
    get:
      consumes:
      - application/json
      description: Returns a Deflate compressed response.
      produces:
      - application/json
      responses:
        "200":
          description: Deflate-encoded data.
      summary: Handle Deflate compression.
      tags:
      - Response Formats
  /delay/{delay}:
    delete:
      consumes:
      - text/plain
      description: Delays the response by a specified number of milliseconds.
      parameters:
      - description: Delay in milliseconds
        in: path
        name: delay
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Delayed response
          schema:
            $ref: '#/definitions/utils.HTTPResponse'
        "400":
          description: Invalid delay value
          schema:
            type: string
      summary: Delay response.
      tags:
      - Dynamic
    get:
      consumes:
      - text/plain
      description: Delays the response by a specified number of milliseconds.
      parameters:
      - description: Delay in milliseconds
        in: path
        name: delay
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Delayed response
          schema:
            $ref: '#/definitions/utils.HTTPResponse'
        "400":
          description: Invalid delay value
          schema:
            type: string
      summary: Delay response.
      tags:
      - Dynamic
    patch:
      consumes:
      - text/plain
      description: Delays the response by a specified number of milliseconds.
      parameters:
      - description: Delay in milliseconds
        in: path
        name: delay
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Delayed response
          schema:
            $ref: '#/definitions/utils.HTTPResponse'
        "400":
          description: Invalid delay value
          schema:
            type: string
      summary: Delay response.
      tags:
      - Dynamic
    post:
      consumes:
      - text/plain
      description: Delays the response by a specified number of milliseconds.
      parameters:
      - description: Delay in milliseconds
        in: path
        name: delay
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Delayed response
          schema:
            $ref: '#/definitions/utils.HTTPResponse'
        "400":
          description: Invalid delay value
          schema:
            type: string
      summary: Delay response.
      tags:
      - Dynamic
    put:
      consumes:
      - text/plain
      description: Delays the response by a specified number of milliseconds.
      parameters:
      - description: Delay in milliseconds
        in: path
        name: delay
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Delayed response
          schema:
            $ref: '#/definitions/utils.HTTPResponse'
        "400":
          description: Invalid delay value
          schema:
            type: string
      summary: Delay response.
      tags:
      - Dynamic
  /delete:
    delete:
      consumes:
      - application/json
      description: Returns the DELETE parameters of the request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: The request's DELETE parameters.
      tags:
      - HTTP Methods
  /deny:
    get:
      consumes:
      - text/plain
      description: Returns a plain text response with denial content.
      produces:
      - text/plain
      responses:
        "200":
          description: Deny response.
          schema:
            type: string
      summary: Handle Deny response.
      tags:
      - Response Formats
  /drip:
    get:
      consumes:
      - text/plain
      description: Streams data in chunks with a specified delay between each chunk.
      parameters:
      - description: Total duration in seconds
        in: query
        name: duration
        type: integer
      - description: Total number of bytes
        in: query
        name: numbytes
        type: integer
      - description: HTTP status code
        in: query
        name: code
        type: integer
      - description: Initial delay in seconds
        in: query
        name: delay
        type: integer
      produces:
      - application/octet-stream
      responses:
        "200":
          description: Streamed data
          schema:
            type: file
        "400":
          description: Invalid parameters
          schema:
            type: string
      summary: Drip response.
      tags:
      - Dynamic
  /encoding/utf8:
    get:
      consumes:
      - text/plain
      description: Returns UTF-8 encoded text content from a file.
      produces:
      - text/plain
      responses:
        "200":
          description: UTF-8 encoded data.
      summary: Serve UTF-8 text content.
      tags:
      - Response Formats
  /etag/{etag}:
    get:
      parameters:
      - description: Optional header to check if the resource does not match the given
          ETag
        in: header
        name: If-None-Match
        type: string
      - description: Optional header to check if the resource matches the given ETag
        in: header
        name: If-Match
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Normal response
        "412":
          description: match
      summary: Assumes the resource has the given etag and responds to If-None-Match
        and If-Match headers appropriately.
      tags:
      - Response Inspection
  /get:
    get:
      consumes:
      - application/json
      description: Returns the query parameters of the request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: The request's query parameters.
      tags:
      - HTTP Methods
  /gzip:
    get:
      consumes:
      - application/json
      description: Returns a Gzip compressed response.
      produces:
      - application/json
      responses:
        "200":
          description: Gzip-encoded data.
      summary: Handle Gzip compression.
      tags:
      - Response Formats
  /headers:
    get:
      consumes:
      - application/json
      description: Returns all headers of the request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Returns the request headers.
      tags:
      - Request Inspection
  /html:
    get:
      consumes:
      - text/html
      description: Returns HTML content from a file.
      produces:
      - text/html
      responses:
        "200":
          description: HTML content.
      summary: Serve HTML content.
      tags:
      - Response Formats
  /image:
    get:
      description: Returns a simple image of the type suggested by the Accept header
      produces:
      - image/webp
      - ' image/png'
      - ' image/jpeg'
      - ' image/svg+xml'
      responses:
        "200":
          description: OK
          schema:
            type: file
        "406":
          description: Not Acceptable
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: object
      summary: Returns an image based on the Accept header
      tags:
      - Images
  /image/jpeg:
    get:
      description: Returns a simple JPEG image
      produces:
      - image/jpeg
      responses:
        "200":
          description: OK
          schema:
            type: file
      summary: Returns a JPEG image
      tags:
      - Images
  /image/png:
    get:
      description: Returns a simple PNG image
      produces:
      - image/png
      responses:
        "200":
          description: OK
          schema:
            type: file
      summary: Returns a PNG image
      tags:
      - Images
  /image/svg:
    get:
      description: Returns a simple SVG image
      produces:
      - image/svg+xml
      responses:
        "200":
          description: OK
          schema:
            type: file
      summary: Returns an SVG image
      tags:
      - Images
  /image/webp:
    get:
      description: Returns a simple WEBP image
      produces:
      - image/webp
      responses:
        "200":
          description: OK
          schema:
            type: file
      summary: Returns a WEBP image
      tags:
      - Images
  /ip:
    get:
      consumes:
      - application/json
      description: Returns the IP address of the client making the request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Returns the client's IP address.
      tags:
      - Request Inspection
  /json:
    get:
      consumes:
      - application/json
      description: Returns JSON content from a file.
      produces:
      - application/json
      responses:
        "200":
          description: JSON content.
      summary: Serve JSON content.
      tags:
      - Response Formats
  /links/{n}/{offset}:
    get:
      consumes:
      - text/plain
      description: Generates a page with a specified number of links.
      parameters:
      - description: Number of links
        in: path
        name: "n"
        required: true
        type: integer
      - description: Offset for links
        in: path
        name: offset
        required: true
        type: integer
      produces:
      - text/html
      responses:
        "200":
          description: HTML page with links
          schema:
            type: string
        "400":
          description: Invalid number of links or offset
          schema:
            type: string
      summary: Generate HTML links.
      tags:
      - Dynamic
  /patch:
    patch:
      consumes:
      - application/json
      description: Returns the PATCH parameters of the request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: The request's PATCH parameters.
      tags:
      - HTTP Methods
  /post:
    post:
      consumes:
      - application/json
      description: Returns the POST parameters of the request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: The request's POST parameters.
      tags:
      - HTTP Methods
  /put:
    put:
      consumes:
      - application/json
      description: Returns the PUT parameters of the request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: The request's PUT parameters.
      tags:
      - HTTP Methods
  /range/{numbytes}:
    get:
      consumes:
      - text/plain
      description: Streams a specified number of bytes in chunks.
      parameters:
      - description: Total number of bytes
        in: path
        name: numbytes
        required: true
        type: integer
      - description: Size of each chunk
        in: query
        name: chunk_size
        type: integer
      - description: Total duration in seconds
        in: query
        name: duration
        type: integer
      produces:
      - application/octet-stream
      responses:
        "200":
          description: Streamed bytes
          schema:
            type: file
        "400":
          description: Invalid number of bytes, chunk_size, or duration
          schema:
            type: string
      summary: Stream bytes in range.
      tags:
      - Dynamic
  /redirect-to:
    delete:
      consumes:
      - application/json
      description: Redirects the request to a specified URL with an optional status
        code.
      parameters:
      - description: URL to redirect to
        in: formData
        name: url
        required: true
        type: string
      - description: HTTP status code for the redirect
        in: formData
        name: status_code
        type: integer
      produces:
      - application/json
      responses:
        "302":
          description: Redirects to the specified URL
          schema:
            type: string
        "400":
          description: URL is required
          schema:
            type: object
      summary: Handle redirect to a specific URL.
      tags:
      - Redirects
    get:
      consumes:
      - application/json
      description: Redirects the request to a specified URL with an optional status
        code.
      parameters:
      - description: URL to redirect to
        in: formData
        name: url
        required: true
        type: string
      - description: HTTP status code for the redirect
        in: formData
        name: status_code
        type: integer
      produces:
      - application/json
      responses:
        "302":
          description: Redirects to the specified URL
          schema:
            type: string
        "400":
          description: URL is required
          schema:
            type: object
      summary: Handle redirect to a specific URL.
      tags:
      - Redirects
    patch:
      consumes:
      - application/json
      description: Redirects the request to a specified URL with an optional status
        code.
      parameters:
      - description: URL to redirect to
        in: formData
        name: url
        required: true
        type: string
      - description: HTTP status code for the redirect
        in: formData
        name: status_code
        type: integer
      produces:
      - application/json
      responses:
        "302":
          description: Redirects to the specified URL
          schema:
            type: string
        "400":
          description: URL is required
          schema:
            type: object
      summary: Handle redirect to a specific URL.
      tags:
      - Redirects
    post:
      consumes:
      - application/json
      description: Redirects the request to a specified URL with an optional status
        code.
      parameters:
      - description: URL to redirect to
        in: formData
        name: url
        required: true
        type: string
      - description: HTTP status code for the redirect
        in: formData
        name: status_code
        type: integer
      produces:
      - application/json
      responses:
        "302":
          description: Redirects to the specified URL
          schema:
            type: string
        "400":
          description: URL is required
          schema:
            type: object
      summary: Handle redirect to a specific URL.
      tags:
      - Redirects
    put:
      consumes:
      - application/json
      description: Redirects the request to a specified URL with an optional status
        code.
      parameters:
      - description: URL to redirect to
        in: formData
        name: url
        required: true
        type: string
      - description: HTTP status code for the redirect
        in: formData
        name: status_code
        type: integer
      produces:
      - application/json
      responses:
        "302":
          description: Redirects to the specified URL
          schema:
            type: string
        "400":
          description: URL is required
          schema:
            type: object
      summary: Handle redirect to a specific URL.
      tags:
      - Redirects
  /redirect/{n}:
    get:
      consumes:
      - application/json
      description: Redirects the request to a relative URL a specified number of times.
      parameters:
      - description: Number of redirects
        in: path
        name: "n"
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "302":
          description: Redirects to the next URL
          schema:
            type: string
        "400":
          description: Invalid redirect count
          schema:
            type: object
      summary: Handle relative redirects.
      tags:
      - Redirects
  /relative-redirect/{n}:
    get:
      consumes:
      - application/json
      description: Redirects the request to a relative URL with a different path a
        specified number of times.
      parameters:
      - description: Number of redirects
        in: path
        name: "n"
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "302":
          description: Redirects to the next URL
          schema:
            type: string
        "400":
          description: Invalid redirect count
          schema:
            type: object
      summary: Handle relative redirects with a different path.
      tags:
      - Redirects
  /response-headers:
    get:
      consumes:
      - application/json
      description: Returns all response headers including freeform values.
      parameters:
      - description: Freeform query parameter
        in: query
        name: freeform
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Response headers
      summary: Returns response headers.
      tags:
      - Response Inspection
    post:
      consumes:
      - application/json
      description: Returns all response headers including freeform values.
      parameters:
      - description: Freeform query parameter
        in: query
        name: freeform
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Response headers
      summary: Returns response headers.
      tags:
      - Response Inspection
  /robots.txt:
    get:
      consumes:
      - text/plain
      description: Returns the content of robots.txt.
      produces:
      - text/plain
      responses:
        "200":
          description: robots.txt content.
      summary: Serve robots.txt content.
      tags:
      - Response Formats
  /status/{code}:
    delete:
      description: Returns a status code based on the path
      parameters:
      - description: HTTP Status Code
        in: path
        name: code
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Return status code or random status code if more than one are given
      tags:
      - Status
    get:
      description: Returns a status code based on the path
      parameters:
      - description: HTTP Status Code
        in: path
        name: code
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Return status code or random status code if more than one are given
      tags:
      - Status
    head:
      description: Returns a status code based on the path
      parameters:
      - description: HTTP Status Code
        in: path
        name: code
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Return status code or random status code if more than one are given
      tags:
      - Status
    options:
      description: Returns a status code based on the path
      parameters:
      - description: HTTP Status Code
        in: path
        name: code
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Return status code or random status code if more than one are given
      tags:
      - Status
    patch:
      description: Returns a status code based on the path
      parameters:
      - description: HTTP Status Code
        in: path
        name: code
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Return status code or random status code if more than one are given
      tags:
      - Status
    post:
      description: Returns a status code based on the path
      parameters:
      - description: HTTP Status Code
        in: path
        name: code
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Return status code or random status code if more than one are given
      tags:
      - Status
    put:
      description: Returns a status code based on the path
      parameters:
      - description: HTTP Status Code
        in: path
        name: code
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Return status code or random status code if more than one are given
      tags:
      - Status
  /stream-bytes/{n}:
    get:
      consumes:
      - text/plain
      description: Streams a specified number of random bytes in chunks.
      parameters:
      - description: Total number of bytes
        in: path
        name: "n"
        required: true
        type: integer
      - description: Size of each chunk
        in: query
        name: chunk_size
        type: integer
      - description: Random seed
        in: query
        name: seed
        type: integer
      produces:
      - application/octet-stream
      responses:
        "200":
          description: Streamed random bytes
          schema:
            type: file
        "400":
          description: Invalid number of bytes
          schema:
            type: string
      summary: Stream random bytes.
      tags:
      - Dynamic
  /stream/{n}:
    get:
      consumes:
      - text/plain
      description: Streams a specified number of JSON responses.
      parameters:
      - description: Number of responses
        in: path
        name: "n"
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Streamed JSON responses
          schema:
            $ref: '#/definitions/api.streamJSONResponse'
        "400":
          description: Invalid number of responses
          schema:
            type: string
      summary: Stream JSON responses.
      tags:
      - Dynamic
  /user-agent:
    get:
      consumes:
      - application/json
      description: Returns the User-Agent string of the request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Returns the User-Agent string.
      tags:
      - Request Inspection
  /uuid:
    get:
      consumes:
      - text/plain
      description: Generates a UUID (version 4).
      produces:
      - application/json
      responses:
        "200":
          description: Generated UUID
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to generate UUID
          schema:
            type: string
      summary: Generate UUID.
      tags:
      - Dynamic
  /xml:
    get:
      consumes:
      - text/xml
      description: Returns XML content from a file.
      produces:
      - text/xml
      responses:
        "200":
          description: XML content.
      summary: Serve XML content.
      tags:
      - Response Formats
swagger: "2.0"
